import numpy as np
from astro_scripts_uibk import io_asu
from importlib.resources import files
import sys

np.set_printoptions(threshold=sys.maxsize)


def test_read_surface_spectrum():
    filename = files("astro_scripts_uibk") / "test_data/T9000G1.50X7.0M02HE.100C8.41_flux"
    spec = io_asu.read_surface_spectrum(filename)
    print(spec)

    expected = np.array([[3.653330e+03, 3.653555e+03, 3.653808e+03, 3.653830e+03, 3.653853e+03,
                          3.654320e+03, 3.654330e+03, 3.654368e+03, 3.654652e+03, 3.654808e+03,
                          3.654820e+03, 3.654830e+03, 3.654831e+03, 3.655152e+03, 3.655320e+03,
                          3.655330e+03, 3.655555e+03, 3.655630e+03, 3.655808e+03, 3.655820e+03,
                          3.655830e+03, 3.655831e+03, 3.656320e+03, 3.656330e+03, 3.656353e+03,
                          3.656808e+03, 3.656820e+03, 3.656830e+03, 3.656831e+03, 3.656939e+03,
                          3.656971e+03, 3.657152e+03, 3.657320e+03, 3.657330e+03, 3.657555e+03,
                          3.657808e+03, 3.657820e+03, 3.657830e+03],
                         [9.994860e-01, 9.994840e-01, 9.994810e-01, 9.994810e-01, 9.994810e-01,
                          9.994770e-01, 9.994770e-01, 9.994770e-01, 9.994750e-01, 9.994740e-01,
                          9.994740e-01, 9.994740e-01, 9.994740e-01, 9.994720e-01, 9.994710e-01,
                          9.994710e-01, 9.994700e-01, 9.994690e-01, 9.994690e-01, 9.994690e-01,
                          9.994680e-01, 9.994680e-01, 9.994670e-01, 9.994670e-01, 9.994670e-01,
                          9.994660e-01, 9.994660e-01, 9.994660e-01, 9.994660e-01, 9.994660e-01,
                          9.994660e-01, 9.994660e-01, 9.994660e-01, 9.994660e-01, 9.994670e-01,
                          9.994670e-01, 9.994670e-01, 9.994670e-01]])

    assert np.allclose(expected, spec)


def test_read_atlas9_flux():
    filename = files("astro_scripts_uibk") / "test_data/T34550G4.04X5M01HE.083_struct"
    spec = io_asu.read_atlas9_flux(filename)

    expected = np.array([[9.09000000e+01, 9.35000000e+01, 9.61000000e+01, 9.77000000e+01,
                          9.96000000e+01, 1.02000000e+02, 1.03800000e+02, 1.05600000e+02,
                          1.07700000e+02, 1.10400000e+02, 1.14000000e+02, 1.17800000e+02,
                          1.21300000e+02, 1.24800000e+02, 1.27100000e+02, 1.28400000e+02,
                          1.30500000e+02, 1.32400000e+02, 1.33900000e+02, 1.36600000e+02,
                          1.39800000e+02, 1.43300000e+02, 1.47200000e+02, 1.51000000e+02,
                          1.55200000e+02, 1.58800000e+02, 1.62000000e+02, 1.66000000e+02,
                          1.70300000e+02, 1.73400000e+02, 1.76800000e+02, 1.80200000e+02,
                          1.81700000e+02, 1.86100000e+02, 1.91000000e+02, 1.93900000e+02,
                          1.98400000e+02, 2.01800000e+02, 2.05000000e+02, 2.10500000e+02,
                          2.16200000e+02, 2.19800000e+02, 2.23000000e+02, 2.26800000e+02,
                          2.30000000e+02, 2.34000000e+02, 2.40000000e+02, 2.46500000e+02,
                          2.52400000e+02, 2.56800000e+02, 2.60000000e+02, 2.64000000e+02,
                          2.68500000e+02, 2.73500000e+02, 2.78500000e+02, 2.84000000e+02,
                          2.90000000e+02, 2.96000000e+02, 3.01000000e+02, 3.08000000e+02,
                          3.18000000e+02, 3.28000000e+02, 3.38000000e+02, 3.48000000e+02,
                          3.57000000e+02, 3.66000000e+02, 3.75000000e+02, 3.85000000e+02,
                          3.95000000e+02, 4.05000000e+02, 4.14000000e+02, 4.22000000e+02,
                          4.30000000e+02, 4.41000000e+02, 4.51000000e+02, 4.60000000e+02,
                          4.70000000e+02, 4.80000000e+02, 4.90000000e+02, 5.00000000e+02,
                          5.06000000e+02, 5.12000000e+02, 5.20000000e+02, 5.30000000e+02,
                          5.40000000e+02, 5.50000000e+02, 5.60000000e+02, 5.70000000e+02,
                          5.80000000e+02, 5.90000000e+02, 6.00000000e+02, 6.10000000e+02,
                          6.20000000e+02, 6.30000000e+02, 6.40000000e+02, 6.50000000e+02,
                          6.58000000e+02, 6.65000000e+02, 6.75000000e+02, 6.85000000e+02,
                          6.95000000e+02, 7.05000000e+02, 7.16000000e+02, 7.26000000e+02,
                          7.35000000e+02, 7.45000000e+02, 7.55000000e+02, 7.65000000e+02,
                          7.75000000e+02, 7.85000000e+02, 7.95000000e+02, 8.05000000e+02,
                          8.15000000e+02, 8.25000000e+02],
                         [1.59175715e-14, 7.94218458e-14, 3.62077057e-13, 9.00617805e-13,
                          2.53620667e-12, 8.90621803e-12, 2.21013058e-11, 5.32050255e-11,
                          1.43008583e-10, 4.84075292e-10, 2.25825191e-09, 1.03801081e-08,
                          3.90432033e-08, 1.35606747e-07, 2.97213994e-07, 4.56561425e-07,
                          8.91505689e-07, 1.60914015e-06, 2.53694044e-06, 5.61272811e-06,
                          1.36979084e-05, 3.48169956e-05, 9.19078695e-05, 2.28051296e-04,
                          5.82328693e-04, 1.24726252e-03, 2.38205339e-03, 5.12240977e-03,
                          1.11732984e-02, 1.90612917e-02, 3.36359150e-02, 5.76683281e-02,
                          7.26326894e-02, 1.40482267e-01, 2.79040302e-01, 4.13262477e-01,
                          7.35808633e-01, 1.11199107e+00, 1.63168510e+00, 3.03563571e+00,
                          5.44570829e+00, 7.97850785e+00, 1.09501208e+01, 1.55136143e+01,
                          1.03830481e+04, 2.62406588e+04, 3.65764619e+04, 5.48127659e+04,
                          8.59985391e+04, 1.13800317e+05, 1.69773383e+05, 3.73068559e+05,
                          5.69870154e+05, 7.27185302e+05, 7.44181189e+05, 1.55589285e+06,
                          2.18058905e+06, 2.48520216e+06, 4.20230792e+06, 7.50069119e+06,
                          2.31841869e+07, 2.86425626e+07, 6.04796751e+07, 9.54860262e+07,
                          1.81648997e+08, 4.25662591e+08, 4.40207905e+08, 4.20484675e+08,
                          7.46987718e+08, 9.70732905e+08, 1.08318719e+09, 1.08587263e+09,
                          1.00971996e+09, 1.27092548e+09, 1.30397692e+09, 1.19043265e+09,
                          1.20171140e+09, 1.45798911e+09, 1.32606819e+09, 1.65253841e+09,
                          2.26895070e+09, 8.05786263e+09, 6.98297831e+09, 6.10850140e+09,
                          4.35415160e+09, 5.53397474e+09, 8.30770094e+09, 9.26479357e+09,
                          8.20055761e+09, 8.78063466e+09, 6.44981530e+09, 7.81790445e+09,
                          1.08726128e+10, 1.00084087e+10, 1.09110093e+10, 1.03993426e+10,
                          9.46695059e+09, 1.08322335e+10, 1.21322751e+10, 9.20559270e+09,
                          1.15091058e+10, 8.65836828e+09, 1.28667555e+10, 1.24692382e+10,
                          1.28436479e+10, 1.20020787e+10, 1.18663248e+10, 1.06534626e+10,
                          1.16932200e+10, 1.13238378e+10, 1.18122074e+10, 1.13921357e+10,
                          1.14641664e+10, 1.16615172e+10]])

    assert np.allclose(expected, spec)


def test_read_atlas9_struct():
    filename = files("astro_scripts_uibk") / "test_data/T34550G4.04X5M01HE.083_struct"
    actual = io_asu.read_atlas9_struct(filename)

    expected = np.array([[8.65490135e-05, 1.07267147e-04, 1.32773586e-04, 1.64153444e-04,
                          2.02727971e-04, 2.50120933e-04, 3.08321298e-04, 3.79761236e-04,
                          4.67417312e-04, 5.74852499e-04, 7.06330899e-04, 8.67021102e-04,
                          1.06317268e-03, 1.30231615e-03, 1.59350036e-03, 1.94763684e-03,
                          2.37793422e-03, 2.90030960e-03, 3.53389326e-03, 4.30166375e-03,
                          5.23098696e-03, 6.35481599e-03, 7.71226121e-03, 9.34871017e-03,
                          1.13173518e-02, 1.36805623e-02, 1.65113594e-02, 1.98963600e-02,
                          2.39383925e-02, 2.87582995e-02, 3.44981066e-02, 4.13246913e-02,
                          4.94333423e-02, 5.90660193e-02, 7.05071777e-02, 8.40690394e-02,
                          1.00108155e-01, 1.19035213e-01, 1.41317860e-01, 1.67508775e-01,
                          1.98253709e-01, 2.34535584e-01, 2.77494297e-01, 3.28185645e-01,
                          3.87818770e-01, 4.57822447e-01, 5.40368612e-01, 6.38493035e-01,
                          7.55682946e-01, 8.96415616e-01, 1.06619017e+00, 1.27198949e+00,
                          1.52365152e+00, 1.83382299e+00, 2.21859091e+00, 2.69841833e+00,
                          3.30236409e+00, 4.06954298e+00, 5.04927939e+00, 6.30363951e+00,
                          7.91480938e+00, 9.98249248e+00, 1.26325385e+01, 1.60204483e+01,
                          2.03038512e+01, 2.56915133e+01, 3.24103323e+01, 4.07531242e+01,
                          5.10900286e+01, 6.38343120e+01, 7.95994916e+01, 9.91651685e+01],
                         [2.11623000e+04, 2.12668000e+04, 2.13951000e+04, 2.15451000e+04,
                          2.17146000e+04, 2.18975000e+04, 2.20923000e+04, 2.22980000e+04,
                          2.25143000e+04, 2.27264000e+04, 2.29301000e+04, 2.31292000e+04,
                          2.33274000e+04, 2.35263000e+04, 2.37273000e+04, 2.39301000e+04,
                          2.41353000e+04, 2.43437000e+04, 2.45564000e+04, 2.47746000e+04,
                          2.50012000e+04, 2.52348000e+04, 2.54730000e+04, 2.57121000e+04,
                          2.59537000e+04, 2.61990000e+04, 2.64494000e+04, 2.67039000e+04,
                          2.69634000e+04, 2.72303000e+04, 2.75068000e+04, 2.77970000e+04,
                          2.81057000e+04, 2.84339000e+04, 2.87796000e+04, 2.91498000e+04,
                          2.95516000e+04, 2.99910000e+04, 3.04740000e+04, 3.10046000e+04,
                          3.15874000e+04, 3.22209000e+04, 3.29030000e+04, 3.36414000e+04,
                          3.44407000e+04, 3.53089000e+04, 3.62456000e+04, 3.72504000e+04,
                          3.83403000e+04, 3.95302000e+04, 4.08266000e+04, 4.22236000e+04,
                          4.37838000e+04, 4.54720000e+04, 4.73197000e+04, 4.93197000e+04,
                          5.15101000e+04, 5.38664000e+04, 5.64402000e+04, 5.92067000e+04,
                          6.21920000e+04, 6.53791000e+04, 6.87899000e+04, 7.24091000e+04,
                          7.62618000e+04, 8.03414000e+04, 8.46752000e+04, 8.92545000e+04,
                          9.41169000e+04, 9.92421000e+04, 1.04689400e+05, 1.10421800e+05],
                         [5.44700000e-01, 6.73500000e-01, 8.29700000e-01, 1.02200000e+00,
                          1.26000000e+00, 1.55600000e+00, 1.92700000e+00, 2.39000000e+00,
                          2.97100000e+00, 3.70600000e+00, 4.63200000e+00, 5.78700000e+00,
                          7.21800000e+00, 8.98000000e+00, 1.11400000e+01, 1.37900000e+01,
                          1.70200000e+01, 2.09500000e+01, 2.57400000e+01, 3.15400000e+01,
                          3.85600000e+01, 4.70800000e+01, 5.74000000e+01, 6.98900000e+01,
                          8.49200000e+01, 1.02900000e+02, 1.24400000e+02, 1.50100000e+02,
                          1.80500000e+02, 2.16500000e+02, 2.59000000e+02, 3.08900000e+02,
                          3.67600000e+02, 4.36500000e+02, 5.17600000e+02, 6.12500000e+02,
                          7.23000000e+02, 8.51100000e+02, 9.99100000e+02, 1.17000000e+03,
                          1.36600000e+03, 1.59400000e+03, 1.86200000e+03, 2.17500000e+03,
                          2.53700000e+03, 2.95600000e+03, 3.44600000e+03, 4.02700000e+03,
                          4.72000000e+03, 5.55100000e+03, 6.55400000e+03, 7.77300000e+03,
                          9.26700000e+03, 1.11200000e+04, 1.34400000e+04, 1.63700000e+04,
                          2.01100000e+04, 2.49500000e+04, 3.12600000e+04, 3.95100000e+04,
                          5.03500000e+04, 6.45400000e+04, 8.30700000e+04, 1.07200000e+05,
                          1.38000000e+05, 1.77000000e+05, 2.25800000e+05, 2.86600000e+05,
                          3.61800000e+05, 4.54500000e+05, 5.68900000e+05, 7.12400000e+05],
                         [9.32900000e+10, 1.14800000e+11, 1.40500000e+11, 1.71800000e+11,
                          2.10200000e+11, 2.57500000e+11, 3.16100000e+11, 3.88400000e+11,
                          4.78200000e+11, 5.90900000e+11, 7.32100000e+11, 9.06800000e+11,
                          1.12100000e+12, 1.38300000e+12, 1.70200000e+12, 2.08800000e+12,
                          2.55500000e+12, 3.11900000e+12, 3.79800000e+12, 4.61300000e+12,
                          5.59000000e+12, 6.76100000e+12, 8.16700000e+12, 9.85200000e+12,
                          1.18600000e+13, 1.42400000e+13, 1.70500000e+13, 2.03700000e+13,
                          2.42600000e+13, 2.88200000e+13, 3.41300000e+13, 4.03000000e+13,
                          4.74300000e+13, 5.56900000e+13, 6.52500000e+13, 7.62500000e+13,
                          8.88200000e+13, 1.03100000e+14, 1.19200000e+14, 1.37300000e+14,
                          1.57600000e+14, 1.80600000e+14, 2.07000000e+14, 2.37100000e+14,
                          2.71100000e+14, 3.09300000e+14, 3.52500000e+14, 4.02200000e+14,
                          4.59600000e+14, 5.25800000e+14, 6.02500000e+14, 6.92000000e+14,
                          7.96700000e+14, 9.21300000e+14, 1.07100000e+15, 1.25100000e+15,
                          1.47200000e+15, 1.74700000e+15, 2.08900000e+15, 2.51700000e+15,
                          3.05400000e+15, 3.72400000e+15, 4.55500000e+15, 5.58300000e+15,
                          6.82400000e+15, 8.31000000e+15, 1.00600000e+16, 1.21100000e+16,
                          1.45000000e+16, 1.72800000e+16, 2.05000000e+16, 2.43400000e+16],
                         [3.65400000e-01, 3.67900000e-01, 3.70800000e-01, 3.73900000e-01,
                          3.77400000e-01, 3.81000000e-01, 3.84900000e-01, 3.89000000e-01,
                          3.93300000e-01, 3.98300000e-01, 4.03900000e-01, 4.10100000e-01,
                          4.16900000e-01, 4.24300000e-01, 4.32500000e-01, 4.41200000e-01,
                          4.50600000e-01, 4.60500000e-01, 4.71100000e-01, 4.82400000e-01,
                          4.94600000e-01, 5.07400000e-01, 5.21400000e-01, 5.37000000e-01,
                          5.54200000e-01, 5.73100000e-01, 5.94000000e-01, 6.16500000e-01,
                          6.40700000e-01, 6.66800000e-01, 6.94900000e-01, 7.25100000e-01,
                          7.57400000e-01, 7.90400000e-01, 8.26000000e-01, 8.65200000e-01,
                          9.08300000e-01, 9.55700000e-01, 1.00800000e+00, 1.06400000e+00,
                          1.12400000e+00, 1.17600000e+00, 1.23400000e+00, 1.29900000e+00,
                          1.37100000e+00, 1.44900000e+00, 1.51600000e+00, 1.57800000e+00,
                          1.63500000e+00, 1.68400000e+00, 1.72800000e+00, 1.76200000e+00,
                          1.77800000e+00, 1.78400000e+00, 1.77800000e+00, 1.76500000e+00,
                          1.72800000e+00, 1.68200000e+00, 1.63100000e+00, 1.57800000e+00,
                          1.52100000e+00, 1.47400000e+00, 1.42500000e+00, 1.38900000e+00,
                          1.36900000e+00, 1.35100000e+00, 1.35200000e+00, 1.34700000e+00,
                          1.35500000e+00, 1.36300000e+00, 1.36200000e+00, 1.36100000e+00],
                         [4.38100000e+03, 4.55600000e+03, 4.58400000e+03, 4.57300000e+03,
                          4.48800000e+03, 4.38300000e+03, 4.26900000e+03, 4.15700000e+03,
                          3.96200000e+03, 3.72800000e+03, 3.55100000e+03, 3.42700000e+03,
                          3.33700000e+03, 3.27400000e+03, 3.22400000e+03, 3.18200000e+03,
                          3.15200000e+03, 3.13300000e+03, 3.12300000e+03, 3.12500000e+03,
                          3.12100000e+03, 3.09700000e+03, 3.06500000e+03, 3.05400000e+03,
                          3.06100000e+03, 3.08500000e+03, 3.11500000e+03, 3.15600000e+03,
                          3.20900000e+03, 3.27500000e+03, 3.35400000e+03, 3.44700000e+03,
                          3.54300000e+03, 3.61400000e+03, 3.69900000e+03, 3.80600000e+03,
                          3.92700000e+03, 4.05900000e+03, 4.20200000e+03, 4.33800000e+03,
                          4.48100000e+03, 4.53300000e+03, 4.60600000e+03, 4.69300000e+03,
                          4.79000000e+03, 4.89900000e+03, 4.91900000e+03, 4.92800000e+03,
                          4.94000000e+03, 4.94900000e+03, 4.94000000e+03, 4.93600000e+03,
                          4.91200000e+03, 4.86500000e+03, 4.79900000e+03, 4.74900000e+03,
                          4.63000000e+03, 4.49700000e+03, 4.38100000e+03, 4.23100000e+03,
                          4.08600000e+03, 3.96400000e+03, 3.83100000e+03, 3.73100000e+03,
                          3.68000000e+03, 3.63200000e+03, 3.62500000e+03, 3.62700000e+03,
                          3.62600000e+03, 3.65400000e+03, 3.64900000e+03, 3.51600000e+03],
                         [5.00000000e+05, 5.00000000e+05, 5.00000000e+05, 5.00000000e+05,
                          5.00000000e+05, 5.00000000e+05, 5.00000000e+05, 5.00000000e+05,
                          5.00000000e+05, 5.00000000e+05, 5.00000000e+05, 5.00000000e+05,
                          5.00000000e+05, 5.00000000e+05, 5.00000000e+05, 5.00000000e+05,
                          5.00000000e+05, 5.00000000e+05, 5.00000000e+05, 5.00000000e+05,
                          5.00000000e+05, 5.00000000e+05, 5.00000000e+05, 5.00000000e+05,
                          5.00000000e+05, 5.00000000e+05, 5.00000000e+05, 5.00000000e+05,
                          5.00000000e+05, 5.00000000e+05, 5.00000000e+05, 5.00000000e+05,
                          5.00000000e+05, 5.00000000e+05, 5.00000000e+05, 5.00000000e+05,
                          5.00000000e+05, 5.00000000e+05, 5.00000000e+05, 5.00000000e+05,
                          5.00000000e+05, 5.00000000e+05, 5.00000000e+05, 5.00000000e+05,
                          5.00000000e+05, 5.00000000e+05, 5.00000000e+05, 5.00000000e+05,
                          5.00000000e+05, 5.00000000e+05, 5.00000000e+05, 5.00000000e+05,
                          5.00000000e+05, 5.00000000e+05, 5.00000000e+05, 5.00000000e+05,
                          5.00000000e+05, 5.00000000e+05, 5.00000000e+05, 5.00000000e+05,
                          5.00000000e+05, 5.00000000e+05, 5.00000000e+05, 5.00000000e+05,
                          5.00000000e+05, 5.00000000e+05, 5.00000000e+05, 5.00000000e+05,
                          5.00000000e+05, 5.00000000e+05, 5.00000000e+05, 5.00000000e+05],
                         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
                         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00],
                         [0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
                          0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00]])

    assert (np.allclose(actual, expected))


def test_read_read_molecfit_crires_col_names():
    filename = files("astro_scripts_uibk") / "test_data/jitter_extracted_1079p6_2_TAC.fits"
    chip = 1
    actual = io_asu.read_molecfit_crires_col_names(filename, chip)

    expected = np.array(['Extracted_RECT', 'Extracted_OPT', 'Error_RECT', 'Error_OPT',
                         'Weight_Norm_RECT', 'Weight_Norm_OPT', 'Background_noise',
                         'Wavelength', 'Wavelength_model', 'mtrans', 'tacflux', 'tacdflux',
                         'tacqual'])

    assert all(actual == expected)


def test_read_read_molecfit_crires_header():
    filename = files("astro_scripts_uibk") / "test_data/jitter_extracted_1079p6_2_TAC.fits"
    chip = 1
    header = io_asu.read_molecfit_crires_header(filename, chip)
    actual = len(header)  # header length

    expected = 694  # header length

    assert actual == expected


def test_read_read_molecfit_crires_spec():
    filename = files("astro_scripts_uibk") / "test_data/jitter_extracted_1079p6_2_TAC.fits"
    chip = 1
    spec = io_asu.read_molecfit_crires_spec(filename, chip)
    actual = spec.T[2]  # second line in spectrum

    expected = np.array([7.54263015e+01, 7.54262985e+01, 1.50221892e-01, 1.50221886e-01,
                         4.10000000e+01, 1.37037745e+05, 0.00000000e+00, 1.06408240e+03,
                         1.06391418e+03, 9.99999179e-01, 7.54263605e+01, 1.50222010e-01,
                         1.00000000e+00])

    assert np.allclose(actual, expected)
